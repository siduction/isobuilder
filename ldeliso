#!/bin/bash

usage()
{
cat << EOF
usage: $0 options

This script run the test1 or test2 over a machine.

OPTIONS:
   -h      Show this message
   -a      ISO architecture, should be 'i386' or 'amd64'
   -f      'cinnamon','gnome','lxde','kde','nox','rqt','xfce','xorg'
   -r      release: '', 'firestarter','paintitblack','thunderstruck'
EOF
}


if [ -f ./liso.conf ]; then  
    . ./liso.conf
elif [ -f ./etc/liso.conf ]; then
    . /etc/liso.conf
else
    IsoPath=/srv/iso
    PublishingPath=/srv/iso-publisher

    # hold the three newes builds, delete older ones
    DeleteOldPublishedIsos=4

    CurrentReleaseName=firestarter
    NextReleaseName=paintitblack
    XperimenatalReleaseName=thunderstruck

    IsoFlavour=nox
    IsoArch=amd64
    SpicePort=6666
    ReleaseCode=next
    SMP=2
fi

while getopts “f:a:r:h:” OPTION; do
     case $OPTION in
         f)
             IsoFlavour=$OPTARG
             ;;
         a)
             IsoArch=$OPTARG
             ;;
         r)
             ReleaseCode=$OPTARG
             ;;
         ?,h)
             usage
             exit
             ;;
     esac
done

case $ReleaseCode in
    current)
        IsoRelease=$CurrentReleaseName
        ;;
    next)
        IsoRelease=$NextReleaseName
        ;;
    xperimental)
        IsoRelease=$XperimenatalReleaseName
        ;;
    *)
        echo "ReleaseCode nicht bekannt $ReleaseCode"
        exit 1
        ;;
esac

if [ -z $IsoFlavour ] || [ -z $IsoArch ]; then
     usage
     exit 1
fi

SearchIsoDir="${PublishingPath}/${IsoRelease}/${IsoFlavour}/${IsoArch}/*${IsoRelease}*iso""
IsoFile=$(ls $SearchIso | tail -n1)

if [ "x$IsoFile" == "x" ]; then
    echo ""
    echo "================================================"
    echo "Isofile with Searchpattern $SearchIso not found!"
    echo "eventually you would like one of these images:  "
    echo ""
    ls ${IsoPath}/${IsoFlavour}/${IsoArch}/*iso
    echo ""
    exit 1
fi

IsoName=$(basename ${IsoFile%.*})
IsoVersion=$(echo $IsoName | awk -F '-' '{ print  $2 }')  # 13.1.1
IsoRelease=$(echo $IsoName | awk -F '-' '{ print  $3 }')  # paintitblack
IsoDateTime=$(echo ${IsoName} | awk -F '-' '{ print  $(NF) }' | sed "s/\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)/\1-\2-\3_\4-/1" ) # datetime

echo ""
echo ""
echo "=============================="
echo "Delete Build:                 "
echo "=============================="
echo "Iso-Version:  ${IsoVersion}"
echo "Iso-Flavour:  ${IsoFlavour}"
echo "Architecture: ${IsoArch}   "
echo "Release:      ${IsoRelease}"
echo "Date/Time:    ${IsoDateTime}"
echo ""

rm -v  ${IsoFile%.*}*

echo ""

